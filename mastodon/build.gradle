plugins {
	id 'com.android.application'
	id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
	id 'org.jetbrains.kotlin.android'
}

android {
	androidResources {
		generateLocaleConfig = true
	}

	compileSdk 35
	defaultConfig {
		applicationId "org.joinmastodon.android"
		minSdk 23
		targetSdk 34
		versionCode 134
		versionName "2.9.4"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug{
			debuggable true
		}
		appcenterPrivateBeta{
			initWith release
			minifyEnabled false
			shrinkResources false
			versionNameSuffix "-priv-beta"
		}
		appcenterPublicBeta{
			initWith release
			versionNameSuffix "-beta"
		}
		githubRelease{
			initWith release
		}
		githubDebug{
			initWith debug
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_17
		targetCompatibility JavaVersion.VERSION_17
		coreLibraryDesugaringEnabled true
	}
	sourceSets{
		appcenterPrivateBeta{
			setRoot "src/appcenter"
		}
		appcenterPublicBeta{
			setRoot "src/appcenter"
		}
		githubRelease{
			setRoot "src/github"
		}
		githubDebug{
			setRoot "src/github"
		}
	}
	lintOptions{
		checkReleaseBuilds false
		abortOnError false
	}
	buildFeatures{
		aidl true
		buildConfig true
	}
	dependenciesInfo{
		// Disables dependency metadata when building APKs.
		includeInApk false
		// Disables dependency metadata when building Android App Bundles.
		includeInBundle false
	}
	namespace 'org.joinmastodon.android'
	kotlinOptions {
		jvmTarget = '17'
	}
}
//I had to add a condition to ignore a dependency, as there was a duplication conflict with the ktx core dependency
/*Me ocorreu, que talvez essa biblioteca externa do grishka (carinha, responsavel pelo desenvolvimento do Mastodon Android),
* tenha sido criada justamente para manter ver√µes antigas das duplicatas.
* TODO(Verificar isso no futuro) */
configurations.configureEach {
	exclude group: 'me.grishka.litex', module: 'collection'
	exclude group: 'me.grishka.litex', module: 'concurrent'
	exclude group: 'me.grishka.litex', module: 'viewpager'
	resolutionStrategy {
		force 'androidx.collection:collection:1.1.0'
		force 'androidx.concurrent:concurrent-futures:1.1.0'
		force 'androidx.viewpager:viewpager:1.0.0'
	}
}

dependencies {
	implementation libs.androidx.viewpager

	api libs.androidx.annotation
	implementation libs.okhttp
	implementation libs.recyclerview
	implementation libs.swiperefreshlayout
	implementation libs.browser
	implementation libs.dynamicanimation
	implementation libs.viewpager
	implementation libs.viewpager2
	implementation libs.palette
	implementation libs.appkit
	implementation libs.gson
	implementation libs.jsoup
	implementation libs.otto
	implementation libs.async.otto
	implementation libs.core
	implementation libs.safe.parcel
	implementation libs.parceler.api
	implementation libs.androidx.core.ktx
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.exifinterface
    annotationProcessor libs.parceler
	coreLibraryDesugaring libs.desugar.jdk.libs

	appcenterPrivateBetaImplementation libs.appcenter.crashes
	appcenterPrivateBetaImplementation libs.appcenter.distribute
	appcenterPublicBetaImplementation libs.appcenter.crashes
	appcenterPublicBetaImplementation libs.appcenter.distribute

	androidTestImplementation libs.androidx.core
	androidTestImplementation libs.androidx.junit
	androidTestImplementation libs.androidx.runner
	androidTestImplementation libs.androidx.espresso.core
}
